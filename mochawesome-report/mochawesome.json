{
  "stats": {
    "suites": 4,
    "tests": 53,
    "passes": 53,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-26T04:51:15.956Z",
    "end": "2023-07-26T04:51:54.532Z",
    "duration": 38576,
    "testsRegistered": 53,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aa8a22bf-13c2-468f-8828-fd4b25092f67",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "324e51d2-c20a-4c31-9188-4c9f98978892",
          "title": "Test console role SM Admin: ",
          "fullFile": "/Users/duytran/Desktop/mavishub-api-testing/src/test/Console/TC001-consoleSMAdmin.js",
          "file": "/src/test/Console/TC001-consoleSMAdmin.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login User Console With Role SM-Admin",
              "fullTitle": "Test console role SM Admin:  Login User Console With Role SM-Admin",
              "timedOut": false,
              "duration": 814,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint).post(\"/v2/auth/login\").send({\n  email: loginEmailConsole,\n  password: sha256HashConsole,\n  isConsole: true,\n});\nif (res.statusCode == 200) {\n  expect(res.body.accessToken).not.to.be.null;\n  console.log(\"Email Login: \" + loginEmailConsole);\n  console.log(\n    \"AccessToken After Login Success: \",\n    (tokenConsole = res.body.accessToken)\n  );\n  console.log(\n    \"RefreshToken After Login Success: \",\n    (refreshTokenConsole = res.body.refreshToken)\n  );\n  console.log(\n    \"UserID After Login Success: \",\n    (userIDConsole = res.body.userID)\n  );\n  return true;\n} else {\n  console.log(\"Error Login: \",res.body);\n  expect(res.body.errorCode).to.be.equal(\"AUTH_ERROR\");\n  expect(res.body.message).to.be.equal(\"Your email or password is wrong\");\n  return false;\n}",
              "err": {},
              "uuid": "47aea1ba-7179-43eb-81bf-ba83cf977e90",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upload File Image",
              "fullTitle": "Test console role SM Admin:  Upload File Image",
              "timedOut": false,
              "duration": 2409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/upload\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .attach(\"file\", \"src/image/avatar-11349012.png\");\nif (res.status === 201) {\n  expect(res.status).to.be.equal(201);\n  console.log(\"Upload Success: \\n\", (logoURL = res.body.url));\n} else {\n  console.log(\"Upload Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "ffad49e7-1206-4857-afe8-d7f2537c23cf",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create New Organization",
              "fullTitle": "Test console role SM Admin:  Create New Organization",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/organizations\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    name: nameOrg,\n    slug: nameSlug,\n    partnershipType: \"sky-mavis\",\n    logoUrl: logoURL,\n  });\nif (res.status === 201) {\n  expect(res.status).to.be.equal(201);\n  console.log(\n    \"Create Organization Success With ID Org: \",\n    (idOrg = res.body.id),\n    (slugOrg = res.body.slug)\n  );\n} else {\n  console.log(\"Create Organization Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "3d37219c-6873-41fa-b74a-819ae8d96bcf",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "List Organization",
              "fullTitle": "Test console role SM Admin:  List Organization",
              "timedOut": false,
              "duration": 696,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/organizations?pageSize=10&page=1&orderBy=id&desc=false\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nif (res.status === 200) {\n  expect(res.status).to.be.equal(200);\n  console.log(\"Total Organization: \", res.body.total);\n} else {\n  console.log(\"List Organization Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "5245cb17-cc5b-407b-ab36-a6271cd01d27",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Organization Detail With OrgID",
              "fullTitle": "Test console role SM Admin:  Get Organization Detail With OrgID",
              "timedOut": false,
              "duration": 939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/organizations/\" + idOrg)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nif (res.status === 200) {\n  expect(res.status).to.be.equal(200);\n  expect(res.body.id).to.be.equal(idOrg);\n} else {\n  console.log(\"Get Organization Detail Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "d1722fb4-b270-49ad-b0df-ce531921944b",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Organization Detail With SlugID",
              "fullTitle": "Test console role SM Admin:  Get Organization Detail With SlugID",
              "timedOut": false,
              "duration": 988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/organizations/\" + slugOrg)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nif (res.status === 200) {\n  expect(res.status).to.be.equal(200);\n  expect(res.body.slug).to.be.equal(slugOrg);\n} else {\n  console.log(\"Get Organization Detail Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "86aa5cb9-ae60-4e68-a559-4a637c660f5d",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Organization Detail With OrgID",
              "fullTitle": "Test console role SM Admin:  Update Organization Detail With OrgID",
              "timedOut": false,
              "duration": 624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/organizations/\" + idOrg)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    name: \"Update Name Org \" + randomNumberNameOrg,\n    partnershipType: \"axie-builder-program\",\n  });\nif (res.status === 202) {\n  expect(res.status).to.be.equal(202);\n  expect(res.body.id).to.be.equal(idOrg);\n} else {\n  console.log(\"Update Organization Detail Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "2e8448e2-77dc-4556-a798-d4f3e75c9fd0",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Organization Status False",
              "fullTitle": "Test console role SM Admin:  Update Organization Status False",
              "timedOut": false,
              "duration": 643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/organizations/\" + idOrg + \"/status\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    active: false,\n  });\nif (res.status === 202) {\n  expect(res.status).to.be.equal(202);\n  expect(res.body.active).to.be.equal(false);\n} else {\n  console.log(\"Update Organization Status Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "3108ee58-be17-40ef-89b0-5fefd4208323",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Organization Status True",
              "fullTitle": "Test console role SM Admin:  Update Organization Status True",
              "timedOut": false,
              "duration": 685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/organizations/\" + idOrg + \"/status\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    active: true,\n  });\nif (res.status === 202) {\n  expect(res.status).to.be.equal(202);\n  expect(res.body.active).to.be.equal(true);\n} else {\n  console.log(\"Update Organization Status Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "f3045179-3e95-4ea5-9609-a8f94eb75f9e",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game Quick Create",
              "fullTitle": "Test console role SM Admin:  Game Quick Create",
              "timedOut": false,
              "duration": 632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/game-quick-create\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    name: \"Game 1 \" + randomNumberNameOrg,\n    slug: nameSlug,\n    thumbnailUrl: logoURL,\n    platforms: [\n      {\n        type: \"desktop\",\n        os: \"windows\",\n      },\n      {\n        type: \"desktop\",\n        os: \"macos\",\n      },\n    ],\n    organizationId: idOrg,\n    ratingId: 2,\n    genres: [\"early-access\", \"turn-based\"],\n  });\nif (res.status === 201) {\n  expect(res.status).to.be.equal(201);\n  expect(res.body.organizationId).to.be.equal(idOrg);\n  idGame = res.body.id;\n  slugGame = res.body.slug;\n} else {\n  console.log(\"Game Quick Create Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "80ad631e-e263-491b-8178-4d4ed03cb650",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get List Game In Organization",
              "fullTitle": "Test console role SM Admin:  Get List Game In Organization",
              "timedOut": false,
              "duration": 968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/organizations/\" +\n      idOrg +\n      \"/games?pageSize=20&page=1&orderBy=id&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "2c8a3183-33ae-4f4f-afc5-bc4aa9d5bdfc",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Game Information",
              "fullTitle": "Test console role SM Admin:  Update Game Information",
              "timedOut": false,
              "duration": 847,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/games/\" + slugGame + \"?section=information\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    name: \"Game 1 \" + randomNumberNameOrg,\n    genres: [\"early-access\", \"turn-based\"],\n    ratingId: 2,\n    description: \"update description\",\n    about: \"update about\",\n    collectibles: [\"0x32950db2a7164ae833121501c797d79e7b79d74c\"],\n  });\nexpect(res.status).to.be.equal(202);\nexpect(res.body.organizationId).to.be.equal(idOrg);\nexpect(res.body.id).to.be.equal(idGame);",
              "err": {},
              "uuid": "856fc206-d5a9-468e-bdc8-3cea72d3bed4",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Image Required",
              "fullTitle": "Test console role SM Admin:  Update Image Required",
              "timedOut": false,
              "duration": 787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/games/\" + slugGame + \"?section=images\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    logoUrl: logoURL,\n    thumbnailUrl: logoURL,\n    gallery: [\n      {\n        type: \"image\",\n        src: logoURL,\n      },\n      {\n        type: \"image\",\n        src: logoURL,\n      },\n    ],\n  });\nexpect(res.status).to.be.equal(202);\nexpect(res.body.organizationId).to.be.equal(idOrg);\nexpect(res.body.id).to.be.equal(idGame);",
              "err": {},
              "uuid": "5d8d5264-daa6-499d-82d9-ce8d6f8ad854",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit Game",
              "fullTitle": "Test console role SM Admin:  Submit Game",
              "timedOut": false,
              "duration": 610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/games/\" + slugGame + \"/state\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    state: \"submit\",\n  });\nexpect(res.status).to.be.equal(202);\nexpect(res.body.organizationId).to.be.equal(idOrg);\nexpect(res.body.id).to.be.equal(idGame);",
              "err": {},
              "uuid": "0a28d269-ffd4-44eb-81f1-9acd8aaf6dcd",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Change Game Mode",
              "fullTitle": "Test console role SM Admin:  Change Game Mode",
              "timedOut": false,
              "duration": 630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/games/\" + slugGame + \"/mode\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    mode: \"coming-soon\",\n  });\nconsole.log();\nexpect(res.status).to.be.equal(202);\nexpect(res.body.organizationId).to.be.equal(idOrg);\nexpect(res.body.id).to.be.equal(idGame);",
              "err": {},
              "uuid": "c30e9e34-2ad1-4c48-b8bb-982453bfa67a",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create New Game Version",
              "fullTitle": "Test console role SM Admin:  Create New Game Version",
              "timedOut": false,
              "duration": 800,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/games/\" + slugGame + \"/versions\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    tag: \"1.1.1\",\n    isLatest: true,\n    patchNotes: {\n      title: \"1.1.1\",\n      thumbnailUrl: logoURL,\n      brief: \"new version\",\n      content: \"new version\",\n    },\n    resources: [\n      {\n        platform: \"desktop\",\n        os: \"windows\",\n        checksum:\n          \"921c79826a36f5fed0821c380149deb31e0089c55a3d75f5f7cedae93fb7baa9\",\n        binaryPath: \"123123\",\n        binarySum:\n          \"921c79826a36f5fed0821c380149deb31e0089c55a3d75f5f7cedae93fb7baa9\",\n        downloadUrl: \"https://translate.google.com/?hl=en&tab=TT\",\n        size: 2,\n      },\n      {\n        platform: \"desktop\",\n        os: \"macos\",\n        checksum:\n          \"921c79826a36f5fed0821c380149deb31e0089c55a3d75f5f7cedae93fb7baa9\",\n        binaryPath: \"123123\",\n        binarySum:\n          \"921c79826a36f5fed0821c380149deb31e0089c55a3d75f5f7cedae93fb7baa9\",\n        downloadUrl: \"https://translate.google.com/?hl=en&tab=TT\",\n        size: 2,\n      },\n    ],\n  });\nexpect(res.status).to.be.equal(201);\nversionGame = res.body.tag;",
              "err": {},
              "uuid": "0a1236fd-368a-45bc-a372-ff4796ca8b03",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get New Version Detail",
              "fullTitle": "Test console role SM Admin:  Get New Version Detail",
              "timedOut": false,
              "duration": 780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/games/\" + slugGame + \"/versions/\" + versionGame)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);\nexpect(res.body.tag).to.be.equal(versionGame);",
              "err": {},
              "uuid": "4fef006c-14a4-47e8-ad8b-d4501e7d8e35",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Approved Version Game",
              "fullTitle": "Test console role SM Admin:  Approved Version Game",
              "timedOut": false,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/games/\" + slugGame + \"/versions/\" + versionGame)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    state: \"submit\",\n  });\nexpect(res.status).to.be.equal(202);\nexpect(res.body.tag).to.be.equal(versionGame);\nexpect(res.body.state).to.be.equal(\"approved\");",
              "err": {},
              "uuid": "1eae1e81-a1fc-463f-b538-9c3a58b171bd",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Published Version Game",
              "fullTitle": "Test console role SM Admin:  Published Version Game",
              "timedOut": false,
              "duration": 789,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .patch(\"/v1/console/games/\" + slugGame + \"/versions/\" + versionGame)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    state: \"publish\",\n  });\nexpect(res.status).to.be.equal(202);\nexpect(res.body.tag).to.be.equal(versionGame);\nexpect(res.body.state).to.be.equal(\"published\");",
              "err": {},
              "uuid": "4b842bb2-9d24-42f2-aedc-7616e2d2ae78",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search Player",
              "fullTitle": "Test console role SM Admin:  Search Player",
              "timedOut": false,
              "duration": 785,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/games/\" + idGame + \"/search-players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    emails: [emailGamePlayer],\n  });\nuserIDAddPlayer = res.body[0].userId;\nexpect(res.status).to.be.equal(200);\nexpect(res.body[0].status).to.be.equal(\"VALID\");",
              "err": {},
              "uuid": "0511a088-3999-48ac-a9b8-cd05234f4531",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Player",
              "fullTitle": "Test console role SM Admin:  Add Player",
              "timedOut": false,
              "duration": 667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/games/\" + idGame + \"/players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userIds: [userIDAddPlayer],\n  });\nexpect(res.status).to.be.equal(201);",
              "err": {},
              "uuid": "f282336f-fa11-4fd2-b915-b952e29f899e",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View List Player",
              "fullTitle": "Test console role SM Admin:  View List Player",
              "timedOut": false,
              "duration": 629,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/games/\" +\n      slugGame +\n      \"/players?pageSize=20&page=1&orderBy=created_at&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "44180f0d-e066-46c0-ba53-1165101007e9",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Player",
              "fullTitle": "Test console role SM Admin:  Remove Player",
              "timedOut": false,
              "duration": 822,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .delete(\"/v1/console/games/\" + idGame + \"/players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userIds: [userIDAddPlayer],\n  });\nexpect(res.status).to.be.equal(202);",
              "err": {},
              "uuid": "ac26aada-92c7-4daa-8dc7-858695218f46",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invite Members With Role Org Admin",
              "fullTitle": "Test console role SM Admin:  Invite Members With Role Org Admin",
              "timedOut": false,
              "duration": 799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/users\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    email: emailOrgAdmin,\n    role: \"organization-admin\",\n    organizationId: idOrg,\n  });\nif (res.status === 201) {\n  expect(res.status).to.be.equal(201);\n  console.log();\n} else {\n  console.log(\n    \"Invite Members With Role Org Admin Error: \\n\",\n    res.status,\n    res.body\n  );\n}",
              "err": {},
              "uuid": "c023d911-7731-479a-8760-9da1a9ffdc1b",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invite Members With Role Game Admin",
              "fullTitle": "Test console role SM Admin:  Invite Members With Role Game Admin",
              "timedOut": false,
              "duration": 771,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/users\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    email: emailGameAdmin,\n    role: \"game-admin\",\n    gameId: idGame,\n    organizationId: idOrg,\n  });\nif (res.status === 201) {\n  expect(res.status).to.be.equal(201);\n} else {\n  console.log(\n    \"Invite Members With Role Game Admin Error: \\n\",\n    res.status,\n    res.body\n  );\n}",
              "err": {},
              "uuid": "b7e48cfb-d186-48c2-9993-1e2099ed6004",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get List Member In Organization",
              "fullTitle": "Test console role SM Admin:  Get List Member In Organization",
              "timedOut": false,
              "duration": 894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/organizations/\" +\n      idOrg +\n      \"/users?pageSize=20&page=1&orderBy=user_id&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "ade0c14d-ccbf-4e3d-85fb-e75e05e0a1ee",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Write Data To File",
              "fullTitle": "Test console role SM Admin:  Write Data To File",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.writeFile(\"slugorg.txt\", slugOrg, (err) => {\n  if (err) throw err;\n});\nfs.writeFile(\"sluggame.txt\", slugGame, (err) => {\n  if (err) throw err;\n});\nfs.writeFile(\"gameversion.txt\", versionGame, (err) => {\n  if (err) throw err;\n});",
              "err": {},
              "uuid": "ddac647e-e589-4213-89ea-e364bd8630d3",
              "parentUUID": "324e51d2-c20a-4c31-9188-4c9f98978892",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47aea1ba-7179-43eb-81bf-ba83cf977e90",
            "ffad49e7-1206-4857-afe8-d7f2537c23cf",
            "3d37219c-6873-41fa-b74a-819ae8d96bcf",
            "5245cb17-cc5b-407b-ab36-a6271cd01d27",
            "d1722fb4-b270-49ad-b0df-ce531921944b",
            "86aa5cb9-ae60-4e68-a559-4a637c660f5d",
            "2e8448e2-77dc-4556-a798-d4f3e75c9fd0",
            "3108ee58-be17-40ef-89b0-5fefd4208323",
            "f3045179-3e95-4ea5-9609-a8f94eb75f9e",
            "80ad631e-e263-491b-8178-4d4ed03cb650",
            "2c8a3183-33ae-4f4f-afc5-bc4aa9d5bdfc",
            "856fc206-d5a9-468e-bdc8-3cea72d3bed4",
            "5d8d5264-daa6-499d-82d9-ce8d6f8ad854",
            "0a28d269-ffd4-44eb-81f1-9acd8aaf6dcd",
            "c30e9e34-2ad1-4c48-b8bb-982453bfa67a",
            "0a1236fd-368a-45bc-a372-ff4796ca8b03",
            "4fef006c-14a4-47e8-ad8b-d4501e7d8e35",
            "1eae1e81-a1fc-463f-b538-9c3a58b171bd",
            "4b842bb2-9d24-42f2-aedc-7616e2d2ae78",
            "0511a088-3999-48ac-a9b8-cd05234f4531",
            "f282336f-fa11-4fd2-b915-b952e29f899e",
            "44180f0d-e066-46c0-ba53-1165101007e9",
            "ac26aada-92c7-4daa-8dc7-858695218f46",
            "c023d911-7731-479a-8760-9da1a9ffdc1b",
            "b7e48cfb-d186-48c2-9993-1e2099ed6004",
            "ade0c14d-ccbf-4e3d-85fb-e75e05e0a1ee",
            "ddac647e-e589-4213-89ea-e364bd8630d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
          "title": "Test console role Org Admin: ",
          "fullFile": "/Users/duytran/Desktop/mavishub-api-testing/src/test/Console/TC002-consoleOrgAdmin.js",
          "file": "/src/test/Console/TC002-consoleOrgAdmin.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Read Data From File",
              "fullTitle": "Test console role Org Admin:  Read Data From File",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.readFile(\"sluggame.txt\", \"utf8\", (err, datagame) => {\n  if (err) {\n    console.error(err);\n    return;\n  }\n  console.log(\"Slug Game: \", datagame);\n  slugGame = datagame;\n});\nfs.readFile(\"slugorg.txt\", \"utf8\", (err, dataorg) => {\n  if (err) {\n    console.error(err);\n    return;\n  }\n  console.log(\"Slug Org: \", dataorg);\n  slugOrg = dataorg\n});\nfs.readFile(\"gameversion.txt\", \"utf8\", (err, gameversion) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n    console.log(\"Game Version: \", gameversion);\n    versionGame = gameversion\n  });",
              "err": {},
              "uuid": "1e994296-4b7c-44b4-b9a6-cf98b4d56115",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login User Console With Role ORG-Admin",
              "fullTitle": "Test console role Org Admin:  Login User Console With Role ORG-Admin",
              "timedOut": false,
              "duration": 1299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint).post(\"/v2/auth/login\").send({\n  email: loginEmailConsole,\n  password: sha256HashConsole,\n  isConsole: true,\n});\nif (res.statusCode == 200) {\n  expect(res.body.accessToken).not.to.be.null;\n  console.log(\"Email Login: \" + loginEmailConsole);\n  console.log(\n    \"AccessToken After Login Success: \",\n    (tokenConsole = res.body.accessToken)\n  );\n  console.log(\n    \"RefreshToken After Login Success: \",\n    (refreshTokenConsole = res.body.refreshToken)\n  );\n  console.log(\n    \"UserID After Login Success: \",\n    (userIDConsole = res.body.userID)\n  );\n  return true;\n} else {\n  console.log(\"Error Login: \", res.body);\n  expect(res.body.errorCode).to.be.equal(\"AUTH_ERROR\");\n  expect(res.body.message).to.be.equal(\"Your email or password is wrong\");\n  return false;\n}",
              "err": {},
              "uuid": "4a746dac-f229-421d-b255-16cff0a759de",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Organization Detail With SlugID",
              "fullTitle": "Test console role Org Admin:  Get Organization Detail With SlugID",
              "timedOut": false,
              "duration": 756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/organizations/\" + slugOrg)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nif (res.status === 200) {\n  expect(res.status).to.be.equal(200);\n  expect(res.body.slug).to.be.equal(slugOrg);\n} else {\n  console.log(\"Get Organization Detail Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "9ebf29dd-cd83-4a03-95ee-c6123cb63209",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get List Game In Organization",
              "fullTitle": "Test console role Org Admin:  Get List Game In Organization",
              "timedOut": false,
              "duration": 624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/organizations/\" +\n      slugOrg +\n      \"/games?pageSize=20&page=1&orderBy=id&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "baebecb2-c637-4189-805b-7c91edbfeb89",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get List Member In Organization",
              "fullTitle": "Test console role Org Admin:  Get List Member In Organization",
              "timedOut": false,
              "duration": 651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/organizations/\" +\n      slugOrg +\n      \"/users?pageSize=20&page=1&orderBy=user_id&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "cf9070e1-b0f2-4395-910e-5a11e1e38a59",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Game Detail In Organization ",
              "fullTitle": "Test console role Org Admin:  Get Game Detail In Organization ",
              "timedOut": false,
              "duration": 676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n.get(\"/v1/console/games/\" + slugGame)\n.set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);\nexpect(res.body.slug).to.be.equal(slugGame);",
              "err": {},
              "uuid": "abd7a9c8-5cb0-40ff-9114-c7f9a02b256f",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get New Version Detail",
              "fullTitle": "Test console role Org Admin:  Get New Version Detail",
              "timedOut": false,
              "duration": 675,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/games/\" + slugGame + \"/versions/\" + versionGame)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);\nexpect(res.body.tag).to.be.equal(versionGame);",
              "err": {},
              "uuid": "e04601b9-dd25-4389-bab1-e4c7f6636841",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search Player",
              "fullTitle": "Test console role Org Admin:  Search Player",
              "timedOut": false,
              "duration": 954,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/games/\" + slugGame + \"/search-players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    emails: [emailGamePlayer],\n  });\nuserIDAddPlayer = res.body[0].userId;\nexpect(res.status).to.be.equal(200);\nexpect(res.body[0].status).to.be.equal(\"VALID\");",
              "err": {},
              "uuid": "87d09420-e755-4dcf-826f-3fc0d4404e63",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Player",
              "fullTitle": "Test console role Org Admin:  Add Player",
              "timedOut": false,
              "duration": 695,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/games/\" + slugGame + \"/players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userIds: [userIDAddPlayer],\n  });\nexpect(res.status).to.be.equal(201);",
              "err": {},
              "uuid": "46f418ef-292c-4a40-8024-ef2e3734d9d3",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View List Player",
              "fullTitle": "Test console role Org Admin:  View List Player",
              "timedOut": false,
              "duration": 735,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/games/\" +\n      slugGame +\n      \"/players?pageSize=20&page=1&orderBy=created_at&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "7589d4f4-adfa-45a1-a3ac-7264158828f9",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Player",
              "fullTitle": "Test console role Org Admin:  Remove Player",
              "timedOut": false,
              "duration": 584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .delete(\"/v1/console/games/\" + slugGame + \"/players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userIds: [userIDAddPlayer],\n  });\nexpect(res.status).to.be.equal(202);",
              "err": {},
              "uuid": "86db6805-b878-4cbe-a7e3-66dc1933481c",
              "parentUUID": "a8e880bd-7ec7-4fa6-8504-ecc8300341a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e994296-4b7c-44b4-b9a6-cf98b4d56115",
            "4a746dac-f229-421d-b255-16cff0a759de",
            "9ebf29dd-cd83-4a03-95ee-c6123cb63209",
            "baebecb2-c637-4189-805b-7c91edbfeb89",
            "cf9070e1-b0f2-4395-910e-5a11e1e38a59",
            "abd7a9c8-5cb0-40ff-9114-c7f9a02b256f",
            "e04601b9-dd25-4389-bab1-e4c7f6636841",
            "87d09420-e755-4dcf-826f-3fc0d4404e63",
            "46f418ef-292c-4a40-8024-ef2e3734d9d3",
            "7589d4f4-adfa-45a1-a3ac-7264158828f9",
            "86db6805-b878-4cbe-a7e3-66dc1933481c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7650,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "bdf982d4-6676-4588-99d4-7cda09b8b880",
          "title": "Test console role Game Admin: ",
          "fullFile": "/Users/duytran/Desktop/mavishub-api-testing/src/test/Console/TC003-consoleGameAdmin.js",
          "file": "/src/test/Console/TC003-consoleGameAdmin.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Read Data From File",
              "fullTitle": "Test console role Game Admin:  Read Data From File",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.readFile(\"sluggame.txt\", \"utf8\", (err, datagame) => {\n  if (err) {\n    console.error(err);\n    return;\n  }\n  console.log(\"Slug Game: \", datagame);\n  slugGame = datagame;\n});\nfs.readFile(\"slugorg.txt\", \"utf8\", (err, dataorg) => {\n  if (err) {\n    console.error(err);\n    return;\n  }\n  console.log(\"Slug Org: \", dataorg);\n  slugOrg = dataorg\n});\nfs.readFile(\"gameversion.txt\", \"utf8\", (err, gameversion) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n    console.log(\"Game Version: \", gameversion);\n    versionGame = gameversion\n  });",
              "err": {},
              "uuid": "81453546-ca71-4ac6-9a4b-481d5f6b3882",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login User Console With Role ORG-Admin",
              "fullTitle": "Test console role Game Admin:  Login User Console With Role ORG-Admin",
              "timedOut": false,
              "duration": 741,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint).post(\"/v2/auth/login\").send({\n  email: loginEmailConsole,\n  password: sha256HashConsole,\n  isConsole: true,\n});\nif (res.statusCode == 200) {\n  expect(res.body.accessToken).not.to.be.null;\n  console.log(\"Email Login: \" + loginEmailConsole);\n  console.log(\n    \"AccessToken After Login Success: \",\n    (tokenConsole = res.body.accessToken)\n  );\n  console.log(\n    \"RefreshToken After Login Success: \",\n    (refreshTokenConsole = res.body.refreshToken)\n  );\n  console.log(\n    \"UserID After Login Success: \",\n    (userIDConsole = res.body.userID)\n  );\n  return true;\n} else {\n  console.log(\"Error Login: \", res.body);\n  expect(res.body.errorCode).to.be.equal(\"AUTH_ERROR\");\n  expect(res.body.message).to.be.equal(\"Your email or password is wrong\");\n  return false;\n}",
              "err": {},
              "uuid": "290ef18f-5d07-424a-94e4-e4be3657236d",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Organization Detail With SlugID",
              "fullTitle": "Test console role Game Admin:  Get Organization Detail With SlugID",
              "timedOut": false,
              "duration": 732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/organizations/\" + slugOrg)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nif (res.status === 200) {\n  expect(res.status).to.be.equal(200);\n  expect(res.body.slug).to.be.equal(slugOrg);\n} else {\n  console.log(\"Get Organization Detail Error: \\n\", res.status, res.body);\n}",
              "err": {},
              "uuid": "6a96c0ab-fa44-452a-aab2-f237d94c87e0",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get List Member In Organization",
              "fullTitle": "Test console role Game Admin:  Get List Member In Organization",
              "timedOut": false,
              "duration": 668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/organizations/\" +\n      slugOrg +\n      \"/users?pageSize=20&page=1&orderBy=user_id&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "83dd621b-09b7-450b-a80e-4d8d997c7065",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Game Detail In Organization ",
              "fullTitle": "Test console role Game Admin:  Get Game Detail In Organization ",
              "timedOut": false,
              "duration": 896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n.get(\"/v1/console/games/\" + slugGame)\n.set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);\nexpect(res.body.slug).to.be.equal(slugGame);",
              "err": {},
              "uuid": "030d8416-e60d-4021-9674-ce844859a785",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get New Version Detail",
              "fullTitle": "Test console role Game Admin:  Get New Version Detail",
              "timedOut": false,
              "duration": 747,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\"/v1/console/games/\" + slugGame + \"/versions/\" + versionGame)\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);\nexpect(res.body.tag).to.be.equal(versionGame);",
              "err": {},
              "uuid": "8a32a790-2b67-4ce2-813d-577af6e8b193",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search Player",
              "fullTitle": "Test console role Game Admin:  Search Player",
              "timedOut": false,
              "duration": 996,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/games/\" + slugGame + \"/search-players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    emails: [emailGamePlayer],\n  });\nuserIDAddPlayer = res.body[0].userId;\nexpect(res.status).to.be.equal(200);\nexpect(res.body[0].status).to.be.equal(\"VALID\");",
              "err": {},
              "uuid": "9248cb40-14cd-4f0b-9bd0-cbdfc3cef1c9",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Player",
              "fullTitle": "Test console role Game Admin:  Add Player",
              "timedOut": false,
              "duration": 719,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .post(\"/v1/console/games/\" + slugGame + \"/players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userIds: [userIDAddPlayer],\n  });\nexpect(res.status).to.be.equal(201);",
              "err": {},
              "uuid": "edb5f607-8a24-4215-901e-5131ffdc7675",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View List Player",
              "fullTitle": "Test console role Game Admin:  View List Player",
              "timedOut": false,
              "duration": 728,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/games/\" +\n      slugGame +\n      \"/players?pageSize=20&page=1&orderBy=created_at&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "f74cc1b4-3439-4307-899a-ac5a81414976",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Player",
              "fullTitle": "Test console role Game Admin:  Remove Player",
              "timedOut": false,
              "duration": 611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .delete(\"/v1/console/games/\" + slugGame + \"/players\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userIds: [userIDAddPlayer],\n  });\nexpect(res.status).to.be.equal(202);",
              "err": {},
              "uuid": "c43b1f33-3b31-412c-b8c2-63222e2bd650",
              "parentUUID": "bdf982d4-6676-4588-99d4-7cda09b8b880",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81453546-ca71-4ac6-9a4b-481d5f6b3882",
            "290ef18f-5d07-424a-94e4-e4be3657236d",
            "6a96c0ab-fa44-452a-aab2-f237d94c87e0",
            "83dd621b-09b7-450b-a80e-4d8d997c7065",
            "030d8416-e60d-4021-9674-ce844859a785",
            "8a32a790-2b67-4ce2-813d-577af6e8b193",
            "9248cb40-14cd-4f0b-9bd0-cbdfc3cef1c9",
            "edb5f607-8a24-4215-901e-5131ffdc7675",
            "f74cc1b4-3439-4307-899a-ac5a81414976",
            "c43b1f33-3b31-412c-b8c2-63222e2bd650"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6839,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "73f1009a-ede2-4756-9740-699c81d7e160",
          "title": "Remove Member: ",
          "fullFile": "/Users/duytran/Desktop/mavishub-api-testing/src/test/Console/TC004-consoleRemoveMember.js",
          "file": "/src/test/Console/TC004-consoleRemoveMember.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Read Data From File",
              "fullTitle": "Remove Member:  Read Data From File",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.readFile(\"slugorg.txt\", \"utf8\", (err, dataorg) => {\n  if (err) {\n    console.error(err);\n    return;\n  }\n  console.log(\"Slug Org: \", dataorg);\n  slugOrg = dataorg\n});",
              "err": {},
              "uuid": "403e7bfb-4a44-4791-a6a5-c0f5742db433",
              "parentUUID": "73f1009a-ede2-4756-9740-699c81d7e160",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login User Console With Role SM-Admin",
              "fullTitle": "Remove Member:  Login User Console With Role SM-Admin",
              "timedOut": false,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint).post(\"/v2/auth/login\").send({\n  email: loginEmailConsole,\n  password: sha256HashConsole,\n  isConsole: true,\n});\nif (res.statusCode == 200) {\n  expect(res.body.accessToken).not.to.be.null;\n  console.log(\"Email Login: \" + loginEmailConsole);\n  console.log(\n    \"AccessToken After Login Success: \",\n    (tokenConsole = res.body.accessToken)\n  );\n  console.log(\n    \"RefreshToken After Login Success: \",\n    (refreshTokenConsole = res.body.refreshToken)\n  );\n  console.log(\n    \"UserID After Login Success: \",\n    (userIDConsole = res.body.userID)\n  );\n  return true;\n} else {\n  console.log(\"Error Login: \", res.body);\n  expect(res.body.errorCode).to.be.equal(\"AUTH_ERROR\");\n  expect(res.body.message).to.be.equal(\"Your email or password is wrong\");\n  return false;\n}",
              "err": {},
              "uuid": "ede51d3e-7328-400b-aa82-9af731e4ef9c",
              "parentUUID": "73f1009a-ede2-4756-9740-699c81d7e160",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Org Admin In Organization",
              "fullTitle": "Remove Member:  Remove Org Admin In Organization",
              "timedOut": false,
              "duration": 653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .delete(\"/v1/console/users\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userId: userIDOrgAdmin,\n  });\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "57e12ded-83d5-4aca-8d61-c0fde0d8304e",
              "parentUUID": "73f1009a-ede2-4756-9740-699c81d7e160",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Game Admin In Organization",
              "fullTitle": "Remove Member:  Remove Game Admin In Organization",
              "timedOut": false,
              "duration": 619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .delete(\"/v1/console/users\")\n  .set(\"Authorization\", \"Bearer \" + tokenConsole)\n  .send({\n    userId: userIDGameAdmin,\n  });\nexpect(res.status).to.be.equal(200);",
              "err": {},
              "uuid": "33d04362-8ca8-439a-a34c-d03212d106e7",
              "parentUUID": "73f1009a-ede2-4756-9740-699c81d7e160",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get List Member In Organization",
              "fullTitle": "Remove Member:  Get List Member In Organization",
              "timedOut": false,
              "duration": 643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(endpoint)\n  .get(\n    \"/v1/console/organizations/\" +\n      slugOrg +\n      \"/users?pageSize=20&page=1&orderBy=user_id&desc=false\"\n  )\n  .set(\"Authorization\", \"Bearer \" + tokenConsole);\nexpect(res.status).to.be.equal(404);\nexpect(res.body.message).to.be.equal(\"User not found\");",
              "err": {},
              "uuid": "a0523403-8924-4651-83b8-1d9097c52c3e",
              "parentUUID": "73f1009a-ede2-4756-9740-699c81d7e160",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "403e7bfb-4a44-4791-a6a5-c0f5742db433",
            "ede51d3e-7328-400b-aa82-9af731e4ef9c",
            "57e12ded-83d5-4aca-8d61-c0fde0d8304e",
            "33d04362-8ca8-439a-a34c-d03212d106e7",
            "a0523403-8924-4651-83b8-1d9097c52c3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2736,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "autoOpen": "true",
        "charts": "true"
      },
      "version": "6.2.0"
    }
  }
}